%use "ast".
%use "program".
%use "syntax".
%use "check".
%use "integers".

exec : [A] instr A -> A -> prop.
run : program A -> A -> prop.
run (pure X) X.
run (bind Instr F) Y :-
    exec Instr X,
    run (F X) Y.
exec (nop X) X.
exec (check X A) X :-
    check X A.

eval_ : program term -> term -> term -> prop.
eval_ Program Type Result :-
    run Program X,
    check X Type,
    multistep X Result.

eval : string -> string -> string -> prop.
eval XStr TyStr YStr :-
    isocast XStr (Program : program term),

    (* type in type is inconsistent *)
    (check typ typ ->
         eval_ Program Ty Y),

    isocast (pure Ty) (TyStr : string),
    isocast (pure Y) (YStr : string).

eval << (Î» "x" : Z . "x" ) 1 >> Type Result ?
